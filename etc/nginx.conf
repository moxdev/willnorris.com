server {
  listen 80;
  listen [::]:80;
  server_name willnorris.com www.willnorris.com;
  return 301 https://willnorris.com$request_uri;
  access_log /var/www/willnorris.com/log/access.log combined;
}

server {
  listen 443 default_server ssl spdy;
  listen [::]:443 default_server ssl spdy;
  server_name willnorris.com www.willnorris.com;

  root /var/www/willnorris.com/public;
  access_log /var/www/willnorris.com/log/ssl_access.log combined;
  error_log /var/www/willnorris.com/log/error.log;

  ssl on;
  ssl_certificate /etc/ssl/private/willnorris.com.pem;
  ssl_certificate_key /etc/ssl/private/willnorris.com.pem;

  add_header Strict-Transport-Security "max-age=31536000";

  location = /contact { return 302 /about; }
  location = /contact/ { return 302 /about; }
  location = /about/resume { return 302 /about; }
  location = /blog { return 302 /; }
  location = /images/logo.jpg { return 301 /logo.jpg; }
  location = /robots.txt  { access_log off; log_not_found off; }
  location = /favicon.ico { access_log off; log_not_found off; }

  # redirect some old WordPress URLs
  location = /feed { return 301 /feed.atom; }
  location /feed/ { return 301 /feed.atom; }
  location ~ ^/content/uploads/(.*) { return 301 /$1; }
  location ~ ^/content/(slides/.*) { return 301 /$1; }
  location ~ ^/page/[0-9]+$ { return 302 /archives; }
  location ~ ^(.+)/comment-page-[0-9]+$ { return 301 $1; }
  location ~ ^/(tag|category)/([^/]+) { return 302 'https://www.google.com/search?as_sitesearch=willnorris.com&q=$2'; }

  location = /.well-known/webfinger {
    if ($request_method !~ ^(GET|HEAD)$) { return 405; }
    set_by_lua $resource 'return ngx.unescape_uri(ngx.req.get_uri_args()["resource"])';
    if ($resource = "") { return 400; }
    if ($resource = "acct:will@willnorris.com")   { rewrite .* /webfinger.json last; }
    if ($resource = "mailto:will@willnorris.com") { rewrite .* /webfinger.json last; }
    if ($resource = "https://willnorris.com")     { rewrite .* /webfinger.json last; }
    if ($resource = "https://willnorris.com/")    { rewrite .* /webfinger.json last; }
  }
  location = /webfinger.json {
    types { application/jrd+json json; }
    add_header Access-Control-Allow-Origin "*";
    add_header X-Robots-Tag "noindex";
  }

  location = /api/webmention {
    if ($request_method = POST) {
      proxy_pass https://webmention.herokuapp.com;
    }
    try_files $uri $uri.html $uri/ =404;
  }

  # exact match for home page so it is served as fast as possible (without
  # evaluating the regex locations and such)
  location = / {
    try_files $uri/ =404;
    error_page 404 /errors/404.html;
  }

  location / {
    try_files $uri $uri.html $uri/ @gum;
  }

  # /tmp is for publicly accessible tmp files.  It is served out of a different
  # root so jekyll builds don't delete it. (regex match so it takes precedence)
  location ~* ^/tmp/ {
    root /var/www/willnorris.com/;
    autoindex on;
    autoindex_localtime on;
    add_header X-Robots-Tag "noindex";
    error_page 403 /errors/403.html;
    error_page 404 /errors/404.html;
  }

  location ~* ^/wiki/ {
    try_files $uri $uri.html $uri/ =404;
    add_header X-Robots-Tag "noindex";
    error_page 403 /errors/403.html;
    error_page 404 /errors/404.html;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico|woff)$ {
    expires 32d;
  }

  location @gum {
    proxy_pass http://localhost:8002;
    proxy_intercept_errors on;
    error_page 403 /errors/403.html;
    error_page 404 /errors/404.html;
    error_page 500 502 503 504 /errors/500.html;
  }
}

# redirect wiki.willnorris.com to willnorris.com/wiki
server {
  listen 80;
  listen [::]:80;
  server_name wiki.willnorris.com wiki.willnorris.dev;
  return 301 https://willnorris.com/wiki$request_uri;
}
